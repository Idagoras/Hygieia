// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: eegdata.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EEGData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EegSessionId  uint64                 `protobuf:"varint,1,opt,name=eegSessionId,proto3" json:"eegSessionId,omitempty"`
	MessageOffset uint32                 `protobuf:"varint,2,opt,name=messageOffset,proto3" json:"messageOffset,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Raw           []uint32               `protobuf:"varint,4,rep,packed,name=raw,proto3" json:"raw,omitempty"`
	Attention     uint32                 `protobuf:"varint,5,opt,name=attention,proto3" json:"attention,omitempty"`
	Meditation    uint32                 `protobuf:"varint,6,opt,name=meditation,proto3" json:"meditation,omitempty"`
	BlinkStrength uint32                 `protobuf:"varint,7,opt,name=blinkStrength,proto3" json:"blinkStrength,omitempty"`
	Alpha1        uint32                 `protobuf:"varint,8,opt,name=alpha1,proto3" json:"alpha1,omitempty"`
	Alpha2        uint32                 `protobuf:"varint,9,opt,name=alpha2,proto3" json:"alpha2,omitempty"`
	Beta1         uint32                 `protobuf:"varint,10,opt,name=beta1,proto3" json:"beta1,omitempty"`
	Beta2         uint32                 `protobuf:"varint,11,opt,name=beta2,proto3" json:"beta2,omitempty"`
	Gamma1        uint32                 `protobuf:"varint,12,opt,name=gamma1,proto3" json:"gamma1,omitempty"`
	Gamma2        uint32                 `protobuf:"varint,13,opt,name=gamma2,proto3" json:"gamma2,omitempty"`
	Delta         uint32                 `protobuf:"varint,14,opt,name=delta,proto3" json:"delta,omitempty"`
	Theta         uint32                 `protobuf:"varint,15,opt,name=theta,proto3" json:"theta,omitempty"`
	UserId        uint64                 `protobuf:"varint,16,opt,name=userId,proto3" json:"userId,omitempty"`
	IsEnd         bool                   `protobuf:"varint,17,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
}

func (x *EEGData) Reset() {
	*x = EEGData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eegdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EEGData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EEGData) ProtoMessage() {}

func (x *EEGData) ProtoReflect() protoreflect.Message {
	mi := &file_eegdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EEGData.ProtoReflect.Descriptor instead.
func (*EEGData) Descriptor() ([]byte, []int) {
	return file_eegdata_proto_rawDescGZIP(), []int{0}
}

func (x *EEGData) GetEegSessionId() uint64 {
	if x != nil {
		return x.EegSessionId
	}
	return 0
}

func (x *EEGData) GetMessageOffset() uint32 {
	if x != nil {
		return x.MessageOffset
	}
	return 0
}

func (x *EEGData) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EEGData) GetRaw() []uint32 {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *EEGData) GetAttention() uint32 {
	if x != nil {
		return x.Attention
	}
	return 0
}

func (x *EEGData) GetMeditation() uint32 {
	if x != nil {
		return x.Meditation
	}
	return 0
}

func (x *EEGData) GetBlinkStrength() uint32 {
	if x != nil {
		return x.BlinkStrength
	}
	return 0
}

func (x *EEGData) GetAlpha1() uint32 {
	if x != nil {
		return x.Alpha1
	}
	return 0
}

func (x *EEGData) GetAlpha2() uint32 {
	if x != nil {
		return x.Alpha2
	}
	return 0
}

func (x *EEGData) GetBeta1() uint32 {
	if x != nil {
		return x.Beta1
	}
	return 0
}

func (x *EEGData) GetBeta2() uint32 {
	if x != nil {
		return x.Beta2
	}
	return 0
}

func (x *EEGData) GetGamma1() uint32 {
	if x != nil {
		return x.Gamma1
	}
	return 0
}

func (x *EEGData) GetGamma2() uint32 {
	if x != nil {
		return x.Gamma2
	}
	return 0
}

func (x *EEGData) GetDelta() uint32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *EEGData) GetTheta() uint32 {
	if x != nil {
		return x.Theta
	}
	return 0
}

func (x *EEGData) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EEGData) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

var File_eegdata_proto protoreflect.FileDescriptor

var file_eegdata_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x65, 0x67, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x03, 0x0a, 0x07, 0x45, 0x45, 0x47, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x65, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x65, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61,
	0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x64, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x65, 0x64, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6c,
	0x69, 0x6e, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x74, 0x61, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x65, 0x74, 0x61, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x74, 0x61, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x65, 0x74, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x61, 0x6d, 0x6d, 0x61, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x6d, 0x61, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x42, 0x0c, 0x5a, 0x0a, 0x48, 0x79, 0x67, 0x69, 0x65, 0x69,
	0x61, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eegdata_proto_rawDescOnce sync.Once
	file_eegdata_proto_rawDescData = file_eegdata_proto_rawDesc
)

func file_eegdata_proto_rawDescGZIP() []byte {
	file_eegdata_proto_rawDescOnce.Do(func() {
		file_eegdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_eegdata_proto_rawDescData)
	})
	return file_eegdata_proto_rawDescData
}

var file_eegdata_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eegdata_proto_goTypes = []interface{}{
	(*EEGData)(nil),               // 0: pb.EEGData
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_eegdata_proto_depIdxs = []int32{
	1, // 0: pb.EEGData.time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_eegdata_proto_init() }
func file_eegdata_proto_init() {
	if File_eegdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eegdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EEGData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eegdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eegdata_proto_goTypes,
		DependencyIndexes: file_eegdata_proto_depIdxs,
		MessageInfos:      file_eegdata_proto_msgTypes,
	}.Build()
	File_eegdata_proto = out.File
	file_eegdata_proto_rawDesc = nil
	file_eegdata_proto_goTypes = nil
	file_eegdata_proto_depIdxs = nil
}
